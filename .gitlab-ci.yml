stages:
  - build
  - test
  - deploy

variables:
  IMAGE_NAME: "pig"
  DEPLOYMENTS_DIR: "deployments"
  HELM_NAME: "pig-helm"

build:
  stage: build
  image: golang:1.23.3-alpine3.20
  script:
    - go build
  artifacts:
    paths:
      - ./pig

build_docker:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
  script:
    - docker build -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA} -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest .
    - docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest

test:
  stage: test
  image: golang:1.23.3-alpine3.20
  script:
    - go test ./...

deploy:
  stage: deploy
  image:
    name: alpine/helm:latest
    entrypoint: [""]
  before_script:
    - mkdir -p ~/.kube
    - echo "$K8S_CLUSTER_BASE64" | base64 -d > ~/.kube/config
    - chmod 600 ~/.kube/config
  script:
    - helm lint ./${DEPLOYMENTS_DIR}/k8s/${HELM_NAME}
    - |
      helm upgrade --install ${HELM_NAME} \
        ./${DEPLOYMENTS_DIR}/k8s/${HELM_NAME} \
        --atomic \
        --wait \
        --set postgresql.auth.username="${POSTGRESQL_USERNAME}" \
        --set postgresql.auth.password="${POSTGRESQL_PASSWORD}" \
        --set postgresql.auth.database="${POSTGRESQL_DATABASE}"

